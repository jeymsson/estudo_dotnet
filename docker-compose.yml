services:
  dk-sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: ct-sqlserver
    environment:
      SA_PASSWORD: "SqlServer2019"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    restart: on-failure:5
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "sqlcmd -S localhost -U sa -P SqlServer2019 -Q 'SELECT 1'"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - opentelemetry

  dk-webapplication:
    build:
      context: .
      dockerfile: Dockerfile
    image: im-webapplication
    container_name: ct-webapplication1
    restart: unless-stopped
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Server=dk-sqlserver,1433;Database=master;User=sa;Password=SqlServer2019;TrustServerCertificate=True;
      Hosts__Jaeger: jaeger-agent
      Hosts__OTLP: otel-collector
      OTLP__ConsoleExporter: true
    ports:
      - "5001:8080"
    depends_on:
      dk-sqlserver:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - opentelemetry

networks:
  opentelemetry:
    external: true

volumes:
  sqlserver-data:
